@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navmenu navbar-expand-md" 
style="background: linear-gradient(to right, rgba(139, 47, 7, 1), rgba(230, 212, 168, 1) 48%, rgba(230, 212, 168, 1) 52%, rgba(139, 47, 7, 1)); 
        padding: 15px;">
    <div class="container-xxl">
        <a href="/" class="navbar-brand me-3">
            <img />
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div id="navbarCollapse" class="collapse navbar-collapse">
            <ul class="navbar-nav me-auto mb-2 mb-md-0 flex-grow-1 justify-content-end align-items-end">
                <li class="nav-item ">
                    <a href="/" class="nav-link hstack">
                        <img class="" src="/img/logo/BugTrackerMark-W.png" height="35px" />
                        <span class="ms-4 fs-4 text-white align-items-end pt-3">
                            BugFix Center
                        </span>
                    </a>
                </li>
                <AuthorizeView>
                    <NotAuthorized>
                        <li class="nav-item ms-auto">
                            <a class="nav-link" href="/dashboard">
                                <i class="bi bi-person-badge fs-2 text-white"></i>
                                <span class="fs-5 text-white">Login</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="Account/Register">
                                <i class="bi bi-person fs-2 text-white"></i>
                                <span class="fs-5 text-white">Register</span>
                            </a>
                        </li>
                    </NotAuthorized>
                    <Authorized>
                        <li class="nav-item ms-auto">
                            <a class="nav-link" href="/dashboard">
                                <i class="bi bi-person-badge fs-2"></i>
                                <span class="fs-5 text-white">
                                    Dashboard
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <!--begin:Menu link-->
                            <form action="Account/Logout" method="post" class="nav-link">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button class="fs-5 text-white btn p-0" href="Account/Manage">
                                    Logout
                                </button>
                            </form>
                            <!--end:Menu link-->
                        </li>
                    </Authorized>
                </AuthorizeView>

            </ul>
        </div>
    </div>
</nav>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    private string? currentUrl;
    private UserInfo? userInfo;


    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}
@page "/projects/{projectId:int}"

@rendermode InteractiveAuto


@inject IProjectDTOService ProjectService



@if (project is not null)
{
    <div class="col-6">
        <section class="card bg-light-subtle rounded-5 border-1 py-1 p-md-2 p-xl-3 p-xxl-4 mb-4">
            <div class="card-body">
                <div class="d-flex align-items-center mt-sm-n1 pb-4 mb-0 mb-lg-1 mb-xl-3">
                    <i class="ai-user text-primary lead pe-1 me-2"></i>
                    <h2 class="mb-0 h2">@project.Name</h2>
                    <a class="btn btn-sm btn-secondary ms-auto" href="/projects/edit/@project.Id">
                        <i class="ai-edit ms-n1 me-2"></i>
                        Edit info
                    </a>
                </div>
                <div class="d-md-flex align-items-center">
                    <div class="d-sm-flex align-items-center">
                        <div class="pt-3 pt-sm-0 ps-sm-3">
                            <h5><span class="badge text-bg-secondary">@project.Priority.GetDisplayName()</span></h5>
                            <p class="lead">Created @project.Created.ToString("g")</p>
                            <div class="text-body-secondary fw-medium d-flex flex-wrap flex-sm-nowrap align-items-center col-8">
                                <div class="d-flex align-items-center me-3">
                                    <p>@((MarkupString)@project.Description!)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="w-100 pt-3 pt-md-0 ms-md-auto" style="max-width: 212px;">
                        <div class="d-flex justify-content-between fs-sm pb-1 mb-2">
                            Profile completion
                            <strong class="ms-2">62%</strong>
                        </div>
                        <div class="progress" style="height: 5px;">
                            <div class="progress-bar" role="progressbar" style="width: 62%" aria-valuenow="62" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                </div>
                <div class="row px-3 py-4 mb-2 mb-sm-3">
                    <div class="col-md-3 mb-4 mb-md-0">
                        <table class="table mb-0">
                            <tbody>
                                <tr>
                                    <td class="border-0 text-body-secondary py-1 px-0">Start Date</td>
                                    <td class="border-0 text-dark fw-medium  text-end py-1 ps-3">@project.StartDate.ToString("d")</td>
                                </tr>
                                <tr>
                                    <td class="border-0 text-body-secondary py-1 px-0">End Date/Due</td>
                                    <td class="border-0 text-dark fw-medium text-end py-1 ps-3">@project.EndDate.ToString("d")</td>
                                </tr>
                                <tr>
                                    <td class="border-0 text-body-secondary py-1 px-0">Archived?</td>
                                    <td class="border-0 text-dark fw-medium text-end py-1 ps-3">@project.Archived.ToString()</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card bg-secondary-subtle d-flex mb-0" role="alert">
                    <i class="ai-circle-info fs-xl"></i>
                    <div class="ps-2">
                        <a class="alert-link ms-1" href="account-settings.html">
                            Tickets
                        </a>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
@code {

    #region Parameters
    [Parameter]
    public int ProjectId { get; set; }


    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }
    #endregion



    #region State
    private UserInfo? userInfo;

    private ProjectDTO? project;
    #endregion



    #region Methods
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            project = await ProjectService.GetProjectByIdAsync(ProjectId, userInfo!.CompanyId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    private async Task HandleSubmit()
    {
        // if (selectedCategoryIds is not null)
        // {
        //     Contact!.Categories.Clear();

        // }
        // await OnSubmit.InvokeAsync(Contact);
    }


    #endregion
}

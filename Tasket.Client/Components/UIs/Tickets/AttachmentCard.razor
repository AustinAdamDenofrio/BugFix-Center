@if (Attachment is not null)
{
    <div class="hstack">
        <div>
            <p class="small ms-auto mb-0">@Attachment.Description</p>
            <a type="button" href="@Attachment.AttachmentUrl">
                <p>Download</p>
            </a>
        </div>
        <button class="btn btn-icon btn-gray-400 ms-1" @onclick="HandleDelete">
            <i class="ki-outline ki-trash fs-4"></i>
        </button>
    </div>
}

@code {
    [Parameter]
    public TicketAttachmentDTO? Attachment { get; set; }


    [Parameter, EditorRequired]
    public EventCallback<int> OnDelete { get; set; }


    string? extension;

    protected override void OnParametersSet()
    {
        extension = Path.GetExtension(Attachment?.FileName)?.Trim('.') ?? "default";
    }


    private async Task HandleDelete()
    {
        try
        {
            await OnDelete.InvokeAsync(Attachment!.Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }
}
